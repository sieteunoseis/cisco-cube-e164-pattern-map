# Docker Compose for Testing with Pre-built Images
# This pulls images from GitHub Container Registry for testing purposes

name: cisco-cube-e164-pattern-map

services:
  frontend:
    image: ghcr.io/sieteunoseis/cisco-cube-e164-pattern-map/frontend:${FRONTEND_TAG:-latest}
    container_name: cisco-cube-frontend
    ports:
      - "3000:80"
    networks:
      - app-network
    environment:
      - PORT=${PORT:-3001}
      - BACKEND_HOST=${BACKEND_HOST:-backend}
      - VITE_API_URL=${VITE_API_URL:-http://localhost:3001}
      - VITE_BRANDING_NAME=${VITE_BRANDING_NAME:-Automate Builders}
      - VITE_BRANDING_URL=${VITE_BRANDING_URL:-https://github.com/sieteunoseis/cisco-cube-e164-pattern-map}
      - VITE_TABLE_COLUMNS=${VITE_TABLE_COLUMNS:-label,pattern,description}
      - VITE_BACKGROUND_LOGO_TEXT=${VITE_BACKGROUND_LOGO_TEXT:-AB}
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    image: ghcr.io/sieteunoseis/cisco-cube-e164-pattern-map/backend:${BACKEND_TAG:-latest}
    container_name: cisco-cube-backend
    ports:
      - "${PORT:-3001}:${PORT:-3001}"  # Expose backend port for testing
    expose:
      - "${PORT:-3001}"
    networks:
      - app-network
    environment:
      - PORT=${PORT:-3001}
      - NODE_ENV=${NODE_ENV:-production}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - VITE_TABLE_COLUMNS=${VITE_TABLE_COLUMNS:-label,pattern,description}
    volumes:
      - backend_data:/app/db  # Persist database
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-3001}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  backend_data:
    driver: local

networks:
  app-network:
    driver: bridge